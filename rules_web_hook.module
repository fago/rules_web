<?php
// $Id$

/**
 * @file Rules Web Hooks - Module file.
 */

/**
 * Implementation of hook_entity_info().
 */
function rules_web_hook_entity_info() {
  return array(
    'rules_web_hook' => array(
      'label' => t('Web hook'),
      'controller class' => 'EntityAPIController',
      'base table' => 'rules_web_hook',
      'fieldable' => TRUE,
      'object keys' => array(
        'id' => 'id',
        'name' => 'name',
        'bundle' => 'name',
      ),
      'bundles' => array(),
      'exportable' => TRUE,
      'access callback' => 'rules_web_hook_access_callback',
    ),
  );
}

/**
 * Implements hook_permission().
 */
function rules_web_hook_permission() {
  return array(
    'administer web hooks' =>  array(
      'title' => t('Administer web hooks'),
      'description' => t('Define web hooks and administer remote sites.'),
    ),
    'use web hooks' =>  array(
      'title' => t('Make use of web hooks'),
    ),
  );
}

/**
 * An access callback for the rules web entities.
 *
 * @see rules_web_entity_info()
 */
function rules_web_hook_access_callback($op, $entity_type, $entity = NULL, $account = NULL) {
  if ($op == 'view') {
    return user_access('use web hooks', $account);
  }
  return user_access('administer web hooks', $account);
}


function rules_web_hook_default_rules_web_hook() {

  $hook = new EntityDB(array(), 'rules_web_hook');
  $hook->name = 'test';
  $hook->label = 'A test hook.';
  $hook->active = TRUE;
  $hook->variables = array(
    'node' => array(
      'type' => 'node',
      'label' => 'Content',
    ),
  );
  $hooks[$hook->name] = $hook;
  return $hooks;
}

